# This is the home for all your variables. The single source of truth for your specific installation.
# Variables with a X need to be filled in. There's a point below which marks that nothing after it needs to be modified for a default installation.
# This is the most important step in the process, please take your time to make sure these are set correctly.
# A note on YAML syntax: only the lowest level variables in each hierarchy need to be filled out. 
# For example, below, don't put anything after "env" or "redhat", but do delete the '#X' and fill in "username"

env:
  redhat: 
    username: X #Providing your Red Hat login credentials here will auto attach your RHEL subscription.
    password: X #If you do not provide it, you will have to do so manually before packages can be installed.
    path_to_qcow2: X #Absolute path to RHEL qcow2 file on workstation running Ansible, e.g. /Users/username/Downloads/rhel-8.5-s390x-kvm.qcow2 (If unclear, see README step 2)
    pull_secret: 'X' #paste OpenShift pull secret into these single quotes. If unclear, see README step 2.
   
# IP addresses for the nodes that Ansible will be run against. 
# Feel free to add as many nodes as needed.
# This will automatically fill out the inventory file when setup.yaml is run.
  ip: 
    kvm: X
    bastion: X
    bootstrap: X
    control: 
      - X
      - X
      - X
    compute: 
      - X
      - X
    #Un-comment and fill out list to create infrastructure nodes
    #infra: 
      #- X
    #Un-comment and fill out list to create extra RHEL KVM guests for non-cluster applications
    #app:
      #- X

# Make sure the total number of each type of node matches up with number of IPs above.
  hostname: 
    kvm: X
    bastion: X
    bootstrap: X
    control: 
      - X
      - X
      - X
    compute: 
      - X
      - X
    #Un-comment and fill out list to create infrastructure nodes
    #infra:
      #- X
      #- X
    #Un-comment and fill out list to create extra RHEL KVM guests for non-cluster applications
    #app:
      #- X
      #- X

  networking: 
    metadata_name: X #e.g. ocpz 
    base_domain: X #e.g. pbm.ihost.com (Will be combined with metadata_name above to create fully qualified domain names)
    interface_name: X #KVM host network interface name: e.g. enc1 or vlan21@enc1
    gateway: X
    netmask: X
    dns: 
      setup_on_bastion: true #Set to false if you do not want to setup a DNS server on the bastion because you already have a DNS server elsewhere.
      nameserver: X #If above variable is true, then this variable should be the same as env.ip.bastion above.
      forwarder: X #For cluster to reach external internet. Can use 8.8.8.8 as a default.

#To create user on bastion, create and copy ssh keys
  access: 
    login: 
      kvm:
        user: X
        pass: X
        sudo_pass: X
      bastion: 
        user: X
        pass: X
        sudo_pass: X
      app:
        user: X
        pass: X
        sudo_pass: X
    ssh:
      ansible_key_comment: "Ansible key" 
      ocp_key_comment: "OpenShift key"


#######################################################################################
# All variables below this point do not need to be changed for a default installation #
#######################################################################################


#Packages to be installed on the KVM host, bastion, and extra RHEL VMs for non-cluster applications (only used if app IP and hostnames are defined above). 
#Feel free to add more as needed.
  pkgs: 
    kvm: ['@server-product-environment','@hardware-monitoring','@network-file-system-client','@remote-system-management',
               '@headless-management','@system-tools','libvirt-devel','libvirt-daemon-kvm','qemu-kvm','virt-manager','genisoimage',
               'libvirt-daemon-config-network','libvirt-client','qemu-img','virt-install','virt-viewer','libvirt-daemon-kvm','libvirt'] 
    bastion: ['haproxy','httpd','bind','bind-utils','expect','firewalld','mod_ssl']
    app: ['@server-product-environment','@system-tools','@remote-system-management']

#Pre-filled values are minimum resource requirements for nodes.
  node_resources:
    bastion:
      disk_size: 30 #in GB
      ram: 4096 #in MB
      vcpu: 4 #number of virtual CPUs
      os_variant: 8.5 #Red Hat Enterprise Linux version
    bootstrap:
      disk_size: 120
      ram: 16384
      vcpu: 4
      os_variant: 8.5
    control:
      disk_size: 120
      ram: 16384
      vcpu: 4 #8 recommended
      os_variant: 8.5
    compute:
      disk_size: 120
      ram: 8192
      vcpu: 2 #6 recommended
      os_variant: 8.5
    infra: #will only be used if you defined infrastructure node IPs and hostnames
      disk_size: 120
      ram: 16384
      vcpu: 8
      os_variant: 8.5
    app: #will only be used if you defined extra RHEL VM app IPs and hostnames
      disk_size: 80
      vcpu: 8
      ram: 8192
      os_variant: 8.5

# If you would like to download the latest stable version of OpenShift, leave as is.
# Otherwise, replace these links with preferred versions.
  openshift:
    client: https://mirror.openshift.com/pub/openshift-v4/s390x/clients/ocp/stable/openshift-client-linux.tar.gz
    installer: https://mirror.openshift.com/pub/openshift-v4/s390x/clients/ocp/stable/openshift-install-linux.tar.gz

# If you would like to use a version of CoreOS that has been tested with these playbooks, leave as is.
# Otherwise, replace these links with preferred versions.
  coreos:
    kernel: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.9/latest/rhcos-4.9.0-s390x-live-kernel-s390x
    initramfs: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.9/latest/rhcos-4.9.0-s390x-live-initramfs.s390x.img
    rootfs: https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/4.9/latest/rhcos-4.9.0-s390x-live-rootfs.s390x.img

# If you would like to keep the defaults for the OpenShift install-config file, leave as is.
  install_config:
    api_version: v1
    compute:
      architecture: s390x
      hyperthreading: Enabled
    control:
      architecture: s390x
      hyperthreading: Enabled
    cluster_network:
      cidr: 10.128.0.0/14
      host_prefix: 23
      type: OpenShiftSDN
    service_network: 172.30.0.0/16
    fips: "false" #include quotes Note: FIPS is not yet supported for OpenShift on Z.
    #OpenShift SSH key is generated via Ansible in ssh_ocp_key_gen role